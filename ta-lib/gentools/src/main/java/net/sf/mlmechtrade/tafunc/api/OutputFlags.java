//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.2-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.24 at 04:31:10 PM EET 
//


package net.sf.mlmechtrade.tafunc.api;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OutputFlags.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="OutputFlags">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Line"/>
 *     &lt;enumeration value="Dotted Line"/>
 *     &lt;enumeration value="Dashed Line"/>
 *     &lt;enumeration value="Dots"/>
 *     &lt;enumeration value="Histogram"/>
 *     &lt;enumeration value="Pattern Bool"/>
 *     &lt;enumeration value="Pattern Bull Bear"/>
 *     &lt;enumeration value="Pattern Strength"/>
 *     &lt;enumeration value="Positive"/>
 *     &lt;enumeration value="Negative"/>
 *     &lt;enumeration value="Zero"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "OutputFlags")
@XmlEnum
public enum OutputFlags {

    @XmlEnumValue("Line")
    LINE("Line"),
    @XmlEnumValue("Dotted Line")
    DOTTED_LINE("Dotted Line"),
    @XmlEnumValue("Dashed Line")
    DASHED_LINE("Dashed Line"),
    @XmlEnumValue("Dots")
    DOTS("Dots"),
    @XmlEnumValue("Histogram")
    HISTOGRAM("Histogram"),
    @XmlEnumValue("Pattern Bool")
    PATTERN_BOOL("Pattern Bool"),
    @XmlEnumValue("Pattern Bull Bear")
    PATTERN_BULL_BEAR("Pattern Bull Bear"),
    @XmlEnumValue("Pattern Strength")
    PATTERN_STRENGTH("Pattern Strength"),
    @XmlEnumValue("Positive")
    POSITIVE("Positive"),
    @XmlEnumValue("Negative")
    NEGATIVE("Negative"),
    @XmlEnumValue("Zero")
    ZERO("Zero");
    private final String value;

    OutputFlags(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OutputFlags fromValue(String v) {
        for (OutputFlags c: OutputFlags.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
